# Tablas cruzadas {#tse04}

```{r include = FALSE}
if(!knitr:::is_html_output())
{
  options("width"=56)
  knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
  knitr::opts_chunk$set(fig.pos = 'H')
}
```

A diferencia de lo visto en la sección anterior, en este epígrafe analizaremos como obtener cuadros resumen en los que existen variables en la cabecera, que determinan grupos de análisis y existen variables en las filas, de las cuáles queremos conocer como se distribuyen sus alternativas de respuesta entre los diferentes perfiles o grupos que determinan las variables de columna. Al igual que sucedió con las tablas marginales, mostraremos poco a poco como trabajar con variables de respuesta simple, múltiple o con medidas estadísticas. Vamos a utilizar otros campos que se localizan en la base de datos del CIS (P3, P21A01, P21A02, P21A03, P31, P33).

## Básica con variables simples

Las tablas que vamos a hacer a continuación, siempre son tablas en las que intervienen al menos dos variables. Una de las variables irá a columnas y la otra variable irá a filas. De ellas se calcularán las frecuencias absolutas o relativas y/o los estadísticos. Vamos a empezar sólo con el estadístico frecuencias, y posteriormente ya pasaremos a estadísticos como la media, suma, etc...

### De frecuencias, variable simple y sólo absolutos

```{r fig.cap='Cruce de estado civil por sexo', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P33) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(total_row_position = "above", total_label = "Total") %>%
    tab_pivot())
```

### De frecuencias, variable simple, con porcentajes de columna

Al igual que hicimos con las tablas marginales vamos a repetir esta tabla, pero en porcentaje de columna (vertical).

```{r fig.cap='Cruce de estado civil por sexo, porcentaje de columna', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P33) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cpct(total_row_position = "above", total_label = "Total") %>% # aquí señalo los porcentajes de columna
    tab_pivot())
```

### De frecuencias, variable simple, con porcentajes de fila

Al igual que hicimos con las tablas marginales vamos a repetir esta tabla, pero en porcentaje de fila (horizontal).

```{r fig.cap='Cruce de estado civil por sexo, porcentaje de fila', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P33) %>%
    tab_cols(total(), P31) %>%
    tab_stat_rpct(total_row_position = "above", total_label = "Total") %>% # aquí señalo los porcentajes de fila
    tab_pivot())
```

### De frecuencias, variable simple, con porcentajes total muestra

Al igual que hicimos con las tablas marginales vamos a repetir esta tabla, pero en porcentaje sobre el total de la muestra.

```{r fig.cap='Cruce de estado civil por sexo, porcentaje sobre el total de la muestra', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P33) %>%
    tab_cols(total(), P31) %>%
    tab_stat_tpct(total_row_position = "above", total_label = "Total") %>% # aquí señalo los porcentajes total muestra
    tab_pivot())
```

### Combinaciones de los anteriores

Vamos ahora a hacer combinaciones entre ellos. Advierto que cada vez se dificulta más la tabla en su lectura. Como dije inicialmente, me decanto más por tablas sencillas y con un sólo dato.

```{r fig.cap='Combinación de casos y porcentajes dentro de las columnas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P33) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(label = "Casos") %>%
    tab_stat_cpct(label = "% casos") %>%
    tab_pivot(stat_position = "inside_columns"))
```

Y la misma tabla pero con los estadísticos en las filas combinando frecuencia y porcentaje...

```{r fig.cap='Combinación de casos y porcentajes por tipo de estadístico en columnas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P33) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(label = "Casos") %>%
    tab_stat_cpct(label = "% casos") %>%
    tab_pivot(stat_position = "outside_columns"))
```

Y la misma tabla pero con los estadísticos en las filas combinando frecuencia y porcentaje...

```{r fig.cap='Combinación de casos y porcentajes dentro de las filas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P33) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(label = "Casos") %>%
    tab_stat_cpct(label = "% casos") %>%
    tab_pivot(stat_position = "inside_rows"))
```

Y la misma tabla pero con los estadísticos en las filas por bloque de tipo de estadístico...

```{r fig.cap='Combinación de casos y porcentajes, por tipo de estadístico en filas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P33) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(label = "Casos") %>%
    tab_stat_cpct(label = "% casos") %>%
    tab_pivot(stat_position = "outside_rows"))
```

## Básica con múltiples

Vamos a realizar ahora el mismo conjunto de tablas, pero en las filas, en lugar de una variable de tipo simple, vamos a utilizar una variable de tipo múltiple. Repetimos los cruces pero cambiamos las celdas donde ahora usaremos la variable P21A con la instrucción `tab_cells(mdset(P21A01 %to% P21A03))`.

### De frecuencias, variable múltiple y sólo absolutos

```{r fig.cap='Cruce de motivos guardar envases enteros por sexo', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(mdset(P21A01 %to% P21A03)) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(total_row_position = "above", total_label = "Total") %>%
    tab_pivot())
```

### De frecuencias, variable múltiple, con porcentajes de columna

Al igual que hicimos con las tablas marginales vamos a repetir esta tabla, pero en porcentaje de columna (vertical).

```{r fig.cap='Cruce de motivos guardar envases enteros por sexo, porcentaje de columna', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(mdset(P21A01 %to% P21A03)) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cpct(total_row_position = "above", total_label = "Total") %>% # aquí señalo los porcentajes de columna
    tab_pivot())
```

### De frecuencias, variable múltiple, con porcentajes de fila

Al igual que hicimos con las tablas marginales vamos a repetir esta tabla, pero en porcentaje de fila (horizontal).

```{r fig.cap='Cruce de motivos guardar envases enteros por sexo, porcentaje de fila', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(mdset(P21A01 %to% P21A03)) %>%
    tab_cols(total(), P31) %>%
    tab_stat_rpct(total_row_position = "above", total_label = "Total") %>% # aquí señalo los porcentajes de fila
    tab_pivot())
```

### De frecuencias, variable múltiple, con porcentajes total muestra

Al igual que hicimos con las tablas marginales vamos a repetir esta tabla, pero en porcentaje sobre el total de la muestra.

```{r fig.cap='Cruce de motivos guardar envases enteros por sexo, porcentaje sobre el total de la muestra', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(mdset(P21A01 %to% P21A03)) %>%
    tab_cols(total(), P31) %>%
    tab_stat_tpct(total_row_position = "above", total_label = "Total") %>% # aquí señalo los porcentajes total muestra
    tab_pivot())
```

### Combinaciones de los anteriores

Vamos ahora a hacer combinaciones entre ellos. Advierto que cada vez se dificulta más la tabla en su lectura. Como dije inicialmente, me decanto más por tablas sencillas y con un sólo dato.

```{r fig.cap='Combinación de casos y porcentajes dentro de las columnas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(mdset(P21A01 %to% P21A03)) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(label = "Casos") %>%
    tab_stat_cpct(label = "% casos") %>%
    tab_pivot(stat_position = "inside_columns"))
```

Y la misma tabla pero con los estadísticos en las filas combinando frecuencia y porcentaje...

```{r fig.cap='Combinación de casos y porcentajes por tipo de estadístico en columnas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(mdset(P21A01 %to% P21A03)) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(label = "Casos") %>%
    tab_stat_cpct(label = "% casos") %>%
    tab_pivot(stat_position = "outside_columns"))
```

Y la misma tabla pero con los estadísticos en las filas combinando frecuencia y porcentaje...

```{r fig.cap='Combinación de casos y porcentajes dentro de las filas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(mdset(P21A01 %to% P21A03)) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(label = "Casos") %>%
    tab_stat_cpct(label = "% casos") %>%
    tab_pivot(stat_position = "inside_rows"))
```

Y la misma tabla pero con los estadísticos en las filas por bloque de tipo de estadístico...

```{r fig.cap='Combinación de casos y porcentajes, por tipo de estadístico en filas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(mdset(P21A01 %to% P21A03)) %>%
    tab_cols(total(), P31) %>%
    tab_stat_cases(label = "Casos") %>%
    tab_stat_cpct(label = "% casos") %>%
    tab_pivot(stat_position = "outside_rows"))
```

Recordamos que siempre con las múltiples existe la posibilidad de calcular los porcentajes con base respuesta en lugar de con base cuestionario (individuos). Para ello debes utilizar `tab_stat_cpct_responses()`.

## Básica con estadísticos

Del mismo modo que antes utilizábamos la tabla cruzada para obtener los casos de intersección entre las categorías de columna y las categorías de fila, ahora procederemos a hacer lo mismo pero con categorías en columnas y cálculo de estadísticos básicos en otro. En definitiva, calcular las medidas estadísticas para cada grupo creado por la variable que general las categorías.

### Cruce entre variable simple y dos estadísticos

Vamos a comenzar con las más simples, dos estadísticos (media y desviación) de una variable métrica (P3) calculados para una variable (P31) que genera dos categorías (hombre y mujer). Nótese el juego a realizar con más de 2 estadísticos con la ubicación de los mismos.

```{r fig.cap='Cruce entre variable y estadísticos', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot())
```

Hagamos ahora su traspuesta, es decir ubiquemos en filas P31 y en columnas 

```{r fig.cap='Transponer tabla', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
var_lab(data$P3)="Satisfacción"
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_rows(total(),P31) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot())
```

Recordemos que los estadísticos los podemos ir moviendo a nuestra necesidad para que se organicen de una forma u otra…

Dentro de las columnas ...

```{r fig.cap='Estadísticos dentro de columnas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "inside_columns"))
```

Dentro de las filas ...

```{r fig.cap='Estadísticos dentro de las filas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "inside_rows"))
```

Como columnas separadas o fuera de columnas ...

```{r fig.cap='Estadísticos separados en columnas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "outside_columns"))
```

Como filas separadas o fuera de filas...

```{r fig.cap='Estadísticos se parados en filas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "outside_rows"))
```

Repitamos ahora estas cuatro últimas tablas, pero en lugar de con una variable que genera grupos y de ellos se calcula la medida estadística, vamos a hacerlo con un cruce de categorías (un campo en columnas y otro en filas) y que en esos cruces, se calcule la medida estadística. Por ejemplo esta tabla me permitiría saber la media de P3 en los hombres de 18 a 25 años.

```{r fig.cap='Uso de variable base (anidación)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot())
```

y juguemos con la posición del cálculo estadística que ahora sí arrojará cuatro configuraciones diferentes.

La primera con los estadísticos fuera de las filas...

```{r fig.cap='Filas con estadístico fuera de filas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "outside_rows")) # por defecto, sin lo ponemos muestra esta opción
```

Los estadísticos dentro de las filas ...

```{r fig.cap='Filas con estadístico dentro de las filas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "inside_rows"))
```

Los estadísticos dentro de las columnas ...
 
```{r fig.cap='Filas con estadísticos dentro de las columnas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "inside_columns"))
```

Los estadísticos fuera de las columnas ...

```{r fig.cap='Filas con estadísticos fuera de las columnas', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), P31) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "outside_columns"))
```

¿Hacemos lo mismo para una variable múltiple?

#### Tabulación cruzada (con cálculo estadístico) y múltiples

Vamos a comenzar con las más simples, dos estadísticos (media y desviación) de una variable métrica (P3) calculados para una variable múltiple (P4_1 a P4_3) que genera categorías. Nótese el juego a realizar con más de 2 estadísticos con la ubicación de los mismos.

```{r fig.cap='Cruce con múltiple y estadístico (1)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot())
```

Hagamos ahora su traspuesta, es decir ubiquemos en filas P21A y en columnas P3.

```{r fig.cap='Cruce con múltiple y estadístico (2)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_rows(total(),mdset(P21A01 %to% P21A03)) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot())
```

Recordemos que los estadísticos los podemos ir moviendo a nuestra necesidad para que se organicen de una forma u otra…

Dentro de columnas ...

```{r fig.cap='Cruce con múltiple y estadístico (3)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "inside_columns"))
```

Dentro de filas ...

```{r fig.cap='Cruce con múltiple y estadístico (4)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "inside_rows"))
```

Fuera de columnas ...

```{r fig.cap='Cruce con múltiple y estadístico (5)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "outside_columns"))
```

Fuera de filas ...

```{r fig.cap='Cruce con múltiple y estadístico (6)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "outside_rows"))
```

Repitamos ahora estas cuatro últimas tablas, pero en lugar de con una variable que genera grupos y de ellos se calcula la medida estadística, vamos a hacerlo con un cruce de categorías (un campo en columnas y otro en filas) y que en esos cruces, se calcule la medida estadística. Por ejemplo esta tabla me permitiría saber la media de P3 en los hombres de 18 a 25 años.

```{r fig.cap='Cruce con múltiple y estadístico (7)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot())
```

y juguemos con la posición del cálculo estadística que ahora sí arrojará cuatro configuraciones diferentes. La primera con los estadísticos dentro de las filas es idéntica a la anterior (por defecto).

```{r fig.cap='Cruce con múltiple y estadístico (8)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "outside_rows")) # por defecto, sin lo ponemos muestra esta opción
```

Los estadísticos fuera de las filas ...

```{r fig.cap='Cruce con múltiple y estadístico (9)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "inside_rows"))
```

Los estadísticos dentro de las columnas ...

```{r fig.cap='Cruce con múltiple y estadístico (10)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "inside_columns"))
```

Los estadísticos fuera de las columnas ...

```{r fig.cap='Cruce con múltiple y estadístico (11)', out.width='80%', fig.asp=.75, fig.align='center', echo=TRUE}
as.datatable_widget(data %>%
    tab_cells(P3) %>%
    tab_cols(total(), mdset(P21A01 %to% P21A03)) %>%
    tab_rows(P33) %>%
    tab_stat_mean(label = "Media") %>%
    tab_stat_sd(label = "Desviación") %>% 
    tab_pivot(stat_position = "outside_columns"))
```

Bien, como has podido observar, el resultado no difiere cuando es múltiple a cuando es simple. Igual que hemos calculado la media y la desviación lo podemos hacer con otros estadísticos:

* media
* desviación
* máximo
* mínimo
* mediana
* suma
* error estándar
* un caso especial que calcula media, desviación y nº de casos
* algunos otros que iremos mostrando para temas muy específicos.
